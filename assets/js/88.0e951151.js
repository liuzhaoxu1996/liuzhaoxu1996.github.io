(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{445:function(t,e,s){"use strict";s.r(e);var n=s(25),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_47-分清参数、局部变量和实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_47-分清参数、局部变量和实例"}},[t._v("#")]),t._v(" 47. 分清参数、局部变量和实例")]),t._v(" "),s("p",[t._v("局部变量就是我们之前说的变量，实在方法体里创建的变量。")]),t._v(" "),s("p",[t._v("参数和局部变量都是演草纸，方法执行完就清除了。")]),t._v(" "),s("p",[t._v("对象是实体/实例，不是变量。对象创建出来之后，被堆在一起，放在类似公告板的地方。方法里创建的对象是不会随着方法结束被清除的。所以对象的地盘不受限制，只要有引用指向一个对象，这个对象的数据就可以通过这个引用来访问。")])])}),[],!1,null,null,null);e.default=r.exports}}]);