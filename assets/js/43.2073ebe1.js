(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{402:function(s,t,a){"use strict";a.r(t);var o=a(25),e=Object(o.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"go-依赖管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-依赖管理"}},[s._v("#")]),s._v(" Go 依赖管理")]),s._v(" "),a("h2",{attrs:{id:"一-gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-gopath"}},[s._v("#")]),s._v(" 一. GOPATH")]),s._v(" "),a("p",[s._v("GOPATH 管理依赖的模式是将所有的依赖都保存在指定的目录下。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("默认路径在 "),a("code",[s._v("~/go(unix, linux)")]),s._v(", "),a("code",[s._v("%USERPROFILE%\\go(windows)")])])]),s._v(" "),a("h2",{attrs:{id:"二-govendor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-govendor"}},[s._v("#")]),s._v(" 二. GOVENDOR")]),s._v(" "),a("p",[s._v("GOVENDOR 管理依赖的模式是在每一个项目下创建一个 vendor 目录，这样就解决了不用项目依赖不同版本库的问题。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("大量第三方依赖管理工具: glide, dep, go dep, ...")])]),s._v(" "),a("h2",{attrs:{id:"三-go-mod-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-go-mod-的使用"}},[s._v("#")]),s._v(" 三. go mod 的使用")]),s._v(" "),a("p",[s._v("go mod 会把依赖保存在 GOPATH/mod/xxx 中")]),s._v(" "),a("ul",[a("li",[s._v("初始化 go mod")])]),s._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" mod init\n")])])]),a("ul",[a("li",[s._v("安装 go 依赖")])]),s._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" get "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u xxx\n")])])]),a("ul",[a("li",[s._v("清除不需要的依赖")])]),s._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假如依赖了v1.1版本的，但是后来升级到v1.2，这时在go mod中会产生不需要引用得依赖，相当于前端的 uninstall")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" mod tidy\n")])])]),a("h2",{attrs:{id:"四-迁移-go-mod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-迁移-go-mod"}},[s._v("#")]),s._v(" 四. 迁移 go mod")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初识化gomod")]),s._v("\ngo mod init myapp\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉所以的库")]),s._v("\ngo build ./"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 vender 以及相关工具配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf vender glide.yaml\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("go mod 的好处")]),s._v(" "),a("p",[s._v("由 go 命令统一的管理，用户不必关心目录结构")])]),s._v(" "),a("h2",{attrs:{id:"五-目录的管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-目录的管理"}},[s._v("#")]),s._v(" 五. 目录的管理")]),s._v(" "),a("p",[s._v("go 同一个文件夹下，只能有一个 main 函数, 所以多个 go 文件需要分别在不同的文件夹下")]),s._v(" "),a("ul",[a("li",[s._v("将所有文件夹下的 go 文件都 build 一下, 只检查，不会生成二进制文件")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("go build ./"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("ul",[a("li",[s._v("编译并生成二进制文件")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("go "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ./"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\ngo "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" GOPATH\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找到 GOPATH ,然后二进制文件生成在 GOPATH/bin 目录下")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);