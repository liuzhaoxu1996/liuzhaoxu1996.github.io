(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{380:function(t,a,s){"use strict";s.r(a);var r=s(25),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第七章-函数表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-函数表达式"}},[t._v("#")]),t._v(" 第七章 函数表达式")]),t._v(" "),s("h4",{attrs:{id:"函数声明提升-在执行代码之前会先读取函数声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明提升-在执行代码之前会先读取函数声明"}},[t._v("#")]),t._v(" 函数声明提升：在执行代码之前会先读取函数声明")]),t._v(" "),s("h4",{attrs:{id:"写递归函数时最好声明具名函数-例如"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写递归函数时最好声明具名函数-例如"}},[t._v("#")]),t._v(" 写递归函数时最好声明具名函数, 例如")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" factorial "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("以上代码创建了一个名为f()命名函数表达式，然后将它赋值给变量factorial。即使把函数赋值给另一个变量，函数名字f依然有效，所以递归可以正常完成。")]),t._v(" "),s("h4",{attrs:{id:"argument-callee-可以代替函数名-但严格模式下不能使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#argument-callee-可以代替函数名-但严格模式下不能使用"}},[t._v("#")]),t._v(" argument.callee 可以代替函数名，但严格模式下不能使用")]),t._v(" "),s("h4",{attrs:{id:"闭包-是指有权访问另一个函数作用域中的变量的函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包-是指有权访问另一个函数作用域中的变量的函数"}},[t._v("#")]),t._v(" 闭包：是指有权访问另一个函数作用域中的变量的函数")]),t._v(" "),s("h4",{attrs:{id:"作用域-函数执行时会生成全局变量对象和函数的活动对象-全局环境的变量对象一直存在-局部环境的变量对象只有再函数执行过程中存在-除闭包外-。在函数中访问一个变量时-就会从作用域链中搜索具有相应名字的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域-函数执行时会生成全局变量对象和函数的活动对象-全局环境的变量对象一直存在-局部环境的变量对象只有再函数执行过程中存在-除闭包外-。在函数中访问一个变量时-就会从作用域链中搜索具有相应名字的变量"}},[t._v("#")]),t._v(" 作用域：函数执行时会生成全局变量对象和函数的活动对象，全局环境的变量对象一直存在，局部环境的变量对象只有再函数执行过程中存在（除闭包外）。在函数中访问一个变量时，就会从作用域链中搜索具有相应名字的变量")]),t._v(" "),s("h4",{attrs:{id:"由于闭包会携带包含它的函数的作用域-因此会比其他函数占用过多的内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由于闭包会携带包含它的函数的作用域-因此会比其他函数占用过多的内存"}},[t._v("#")]),t._v(" 由于闭包会携带包含它的函数的作用域，因此会比其他函数占用过多的内存")]),t._v(" "),s("h4",{attrs:{id:"在全局函数中-this指向window-而当函数被作为某个对象的方法调用时-this指向这个对象-匿名函数的执行环境具有全局性-因此其this对象通常指向window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在全局函数中-this指向window-而当函数被作为某个对象的方法调用时-this指向这个对象-匿名函数的执行环境具有全局性-因此其this对象通常指向window"}},[t._v("#")]),t._v(" 在全局函数中, this指向window, 而当函数被作为某个对象的方法调用时, this指向这个对象, 匿名函数的执行环境具有全局性, 因此其this对象通常指向window")]),t._v(" "),s("h4",{attrs:{id:"每个函数在被调用时都会自动取得两个特殊变量-this和arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每个函数在被调用时都会自动取得两个特殊变量-this和arguments"}},[t._v("#")]),t._v(" 每个函数在被调用时都会自动取得两个特殊变量: this和arguments")]),t._v(" "),s("h4",{attrs:{id:"闭包会引用包含函数的整个活动对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包会引用包含函数的整个活动对象"}},[t._v("#")]),t._v(" 闭包会引用包含函数的整个活动对象")])])}),[],!1,null,null,null);a.default=n.exports}}]);