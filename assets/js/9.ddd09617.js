(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{366:function(v,_,t){"use strict";t.r(_);var a=t(25),l=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"_4-图的实现和特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-图的实现和特性"}},[v._v("#")]),v._v(" 4. 图的实现和特性")]),v._v(" "),t("h2",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[v._v("#")]),v._v(" 定义")]),v._v(" "),t("p",[v._v("图是由顶点和边组成(可以无边，但至少包含一个顶点)")]),v._v(" "),t("h2",{attrs:{id:"图的特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图的特性"}},[v._v("#")]),v._v(" 图的特性")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("图可以分为有向图和无向图，在图中：")]),v._v(" "),t("ul",[t("li",[v._v("(v, w) 表示无向边，即 v 和 w 是互通的")]),v._v(" "),t("li",[v._v("<v, w> 表示有向边，该边始于 v，终于 w")])])]),v._v(" "),t("li",[t("p",[v._v("图可以分为有权图和无权图：")]),v._v(" "),t("ul",[t("li",[v._v("有权图：每条边具有一定的权重(weight)，通常是一个数字")]),v._v(" "),t("li",[v._v("无权图：每条边均没有权重，也可以理解为权为 1")])])]),v._v(" "),t("li",[t("p",[v._v("图又可以分为连通图和非连通图：")]),v._v(" "),t("ul",[t("li",[v._v("连通图：所有的点都有路径相连")]),v._v(" "),t("li",[v._v("非连通图：存在某两个点没有路径相连")])])]),v._v(" "),t("li",[t("p",[v._v("图中的顶点有度的概念：")]),v._v(" "),t("ul",[t("li",[v._v("度(Degree)：所有与它连接点的边数之和")]),v._v(" "),t("li",[v._v("入度(Indegree)：存在于有向图中，所有接入该点的边数之和")]),v._v(" "),t("li",[v._v("出度(Outdegree)：存在于有向图中，所有接出该点的边数之和")])])])]),v._v(" "),t("h2",{attrs:{id:"图的表示方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图的表示方法"}},[v._v("#")]),v._v(" 图的表示方法")]),v._v(" "),t("p",[v._v("图在程序中的表示一般有两种方式：")]),v._v(" "),t("ol",[t("li",[v._v("邻接矩阵：")])]),v._v(" "),t("ul",[t("li",[v._v("在 n 个顶点的图需要有一个 n × n 大小的矩阵")]),v._v(" "),t("li",[v._v("在一个无权图中，矩阵坐标中每个位置值为 1 代表两个点是相连的，0 表示两点是不相连的")]),v._v(" "),t("li",[v._v("在一个有权图中，矩阵坐标中每个位置值代表该两点之间的权重，0 表示该两点不相连")]),v._v(" "),t("li",[v._v("在无向图中，邻接矩阵关于对角线相等")])]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[v._v("邻接链表：")])]),v._v(" "),t("ul",[t("li",[v._v("对于每个点，存储着一个链表，用来指向所有与该点直接相连的点")]),v._v(" "),t("li",[v._v("对于有权图来说，链表中元素值对应着权重")])]),v._v(" "),t("p",[v._v("例如在无向无权图中：\n"),t("img",{attrs:{src:"https://pic1.zhimg.com/v2-97b58740d45f3041736d45faacbbfb94_r.jpg",alt:""}})]),v._v(" "),t("p",[v._v("在无向有权图中:\n"),t("img",{attrs:{src:"https://pic4.zhimg.com/v2-f61069964fbedf56ebf2eba6f60d0267_r.jpg",alt:""}})]),v._v(" "),t("p",[v._v("而在有向无权图中：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://pic1.zhimg.com/80/v2-a0a7be239901e18c1b3ff2195d2d7450_1440w.png",alt:""}})]),v._v(" "),t("h2",{attrs:{id:"图算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图算法"}},[v._v("#")]),v._v(" 图算法")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("DFS")])]),v._v(" "),t("li",[t("p",[v._v("BFS")])])]),v._v(" "),t("p",[v._v("待更新...")])])}),[],!1,null,null,null);_.default=l.exports}}]);