(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{390:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_4-变量-作用域和内存问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量-作用域和内存问题"}},[t._v("#")]),t._v(" 4. 变量 作用域和内存问题")]),t._v(" "),a("ul",[a("li",[t._v("判断基础类型使用typeof操作符, 判断引用类型使用instanceOf")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("例如"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person instanceOf Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person instanceOf Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person instanceOf RegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("变量赋值为对象时, 对象指针存储在新分配的空间中, 而真实的对象存储在堆内存中")])]),t._v(" "),a("li",[a("p",[t._v("JavaScript中函数参数都是按值传递的, 如果参数是引用类型, 也会按照引用访问同一个对象")])]),t._v(" "),a("li",[a("p",[t._v("垃圾收集的方式有两种")]),t._v(" "),a("ul",[a("li",[t._v("标记清除")]),t._v(" "),a("li",[t._v("引用计数(循环引用会导致内存泄露)")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);